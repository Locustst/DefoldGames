local data = require "main.data"

local FADE = 0.25

function init(self)
	self.time = 0
	self.ang = 0
	self.lock = 0
	self.cooldown = 0
	self.coolmax = 1
	self.speed = 1
	self.shotspeed = 150
	self.move = 0
	sprite.set_constant("#sprite", "tint", vmath.vector4(1,1,1,FADE))
	msg.post(".", "acquire_input_focus")
end

local function quit2menu(self)
	msg.post("main:/handler", "show_menu")
end

local function shoot(self)
	local v = vmath.vector3(math.cos(self.ang), math.sin(self.ang), 0)
	v = vmath.normalize(v) * self.shotspeed
	factory.create("#shot_factory", nil, nil, {move = v})
	self.cooldown = 0
end

local function cooldown(self, dt)
	self.cooldown = self.cooldown + dt
	if self.cooldown > self.coolmax then self.cooldown = self.coolmax end
	msg.post("view#game", "cooldown", {level = self.cooldown, max = self.coolmax})
	if self.cooldown == self.coolmax then sprite.set_constant("#sprite", "tint", vmath.vector4(1,1,1,1))
	else sprite.set_constant("#sprite", "tint", vmath.vector4(1,1,1,FADE))
	end
end

local function move(self, dt)
	self.ang = self.ang - self.move * dt
	go.set_rotation(vmath.quat_rotation_z(self.ang))
	self.move = 0
end

function update(self, dt)
	cooldown(self, dt)
	move(self, dt)

	self.coolmax = self.coolmax - (dt / 1000)
	if self.coolmax < 0.1 then self.coolmax = 0.1
	end
	if self.lock > 0 then self.lock = self.lock - 1
	end
	self.speed = self.speed + (dt / 300)
	if self.speed > 4 then self.speed = 4
	end
	self.shotspeed = self.shotspeed + (dt / 5)
end

local function dead(self)
	go.set_rotation(vmath.quat_rotation_z(0))
	particlefx.play("#pfx")
	msg.post("#co", "disable")
	msg.post("view#sprite", "disable")
	msg.post("view#gameover", "show")
	sound.play("main:/sound#gameover")
	self.lock = 30
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.other_group == hash("enemy") then
			dead(self)
		end
	end
end

local function rotate(self, action, rot)
	if self.cooldown < self.coolmax then return end
	self.move = rot

	if action.released then shoot(self)
	end
end

local function input_playing(self, action_id, action)
	if action_id == hash("action") then 
		rotate(self, action, -self.speed)
	elseif action_id == hash("back") then 
		rotate(self, action, self.speed)
	elseif action_id == hash("exit") and action.pressed then
		sound.play("main:/sound#exit")
		msg.post("main:/handler", "show_menu")
	end
end

local function input_gameover(self, action_id, action)
	if action_id == hash("action") and action.pressed then
		quit2menu(self)
	end
end

function on_input(self, action_id, action)
	if self.lock > 0 then return end
	if data.state == data.STATE_PLAYING then
		input_playing(self, action_id, action)
	elseif data.state == data.STATE_GAMEOVER then
		msg.post("view#gameover", "input", {action_id = action_id, action = action})
	end
end
