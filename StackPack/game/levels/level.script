local data = require "main.data"

local function tile(self, x, y)
	local p = {
		0,0,0,0,33,
		0,0,0,1,42,
		0,0,1,0,34,
		0,0,1,1,36,
		0,1,0,0,41,
		0,1,0,1,45,
		0,1,1,0,35,
		0,1,1,1,47,
		1,0,0,0,40,
		1,0,0,1,44,
		1,0,1,0,37,
		1,0,1,1,48,
		1,1,0,0,43,
		1,1,0,1,38,
		1,1,1,0,46,
		1,1,1,1,47}

	local n = tilemap.get_tile("#tilemap", "world", x, y+1)
	local e = tilemap.get_tile("#tilemap", "world", x+1, y)
	local s = tilemap.get_tile("#tilemap", "world", x, y-1)
	local w = tilemap.get_tile("#tilemap", "world", x-1, y)

	if n >= 33 and n <= 48 then n = 1 else n = 0 end
	if e >= 33 and e <= 48 then e = 1 else e = 0 end
	if s >= 33 and s <= 48 then s = 1 else s = 0 end
	if w >= 33 and w <= 48 then w = 1 else w = 0 end

	local c = 1
	while p[c] ~= n or p[c+1] ~= e or p[c+2] ~= s or p[c+3] ~= w do
		c = c + 5
	end

	local tile = p[c+4]
	tilemap.set_tile("#tilemap", "world", x, y, tile)
end

local function parse(self)
	local frames = {
		vmath.vector3(59,60,0),
		vmath.vector3(61,62,0),
		vmath.vector3(161,164,0),
		vmath.vector3(166,169,0),
	}
	
	sx, sy, w, h = tilemap.get_bounds("#tilemap")

	for y = sy+1, h+sy-2 do
		for x = sx+1, w+sx-2 do
			local c = tilemap.get_tile("#tilemap", "control", x, y)
			local t = tilemap.get_tile("#tilemap", "world", x, y)

			if c == 1 then
				tilemap.set_tile("#tilemap", "control", x, y, 0)
				msg.post("common/player", "position", {pos = data.tile2world(vmath.vector3(x, y, 0.5))})
			elseif c == 2 then
				tilemap.set_tile("#tilemap", "control", x, y, 0)
			elseif c >= 3 and c <= 5 then
				local i = c - 2
				data.cratestotal[i] = data.cratestotal[i] + 1
			elseif c == 12 then
				tilemap.set_tile("#tilemap", "control", x, y, 0)
				factory.create("#fence-factory", data.tile2world(vmath.vector3(x, y, 0.2)))
			elseif c == 14 then 
				tilemap.set_tile("#tilemap", "control", x, y, 0)
				factory.create("#fence-factory", data.tile2world(vmath.vector3(x, y, 0.2)), nil, {vert = true})
			end

			if t == 0 then
				if math.random(1,10) > 5 then
					tilemap.set_tile("#tilemap", "world", x, y, 20)
				end
			elseif t == 33 then
				tile(self, x, y)
			end

			for k,v in pairs(frames) do
				if c >= frames[k].x and c <= frames[k].y then
					table.insert(self.anim, vmath.vector4(x, y, frames[k].x, frames[k].y))
				end
			end
		end
	end
end

function init(self)
	self.anim = {}
	self.time = 0
	data.time = os.clock()
end

local ANIM_TIME = 0.2

local function animate(self, dt)
	self.time = self.time + dt
	if self.time >= ANIM_TIME then
		self.time = 0
		for k,v in pairs(self.anim) do
			local t = tilemap.get_tile("#tilemap", "control", self.anim[k].x, self.anim[k].y)
			t = t + 1
			if t > self.anim[k].w then t = self.anim[k].z end
			tilemap.set_tile("#tilemap", "control", self.anim[k].x, self.anim[k].y, t)
		end
	end
end

function update(self, dt)
	if data.state == data.STATE_PLAYING then
		data.fence = math.random(2,5) / 10
		animate(self, dt)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("parse") then
		parse(self)
	end
end


