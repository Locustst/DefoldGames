local function generate(self)
	sx, sy, width, height = tilemap.get_bounds("/level#tilemap")

	local buff = buffer.create(width * height, {{name=hash("rgba"), type = buffer.VALUE_TYPE_UINT8, count = 4}})
	local stream = buffer.get_stream(buff, hash("rgba"))

	for y = sy , sy + height - 1 do
		for x = sx , sx + width - 1 do
			local index = ((y - sy) * width * 4) + ((x - sx) * 4) 
			local t = tilemap.get_tile("/level#tilemap", "world", x, y)
			local c = tilemap.get_tile("/level#tilemap", "control", x, y)

			if t >= 33 and t <= 48 then
				stream[index + 1] = 0x32
				stream[index + 2] = 0x3d
				stream[index + 3] = 0xa1
			elseif c >= 12 and c <= 15 then
				stream[index + 1] = 0xff
				stream[index + 2] = 0xff
				stream[index + 3] = 0xff
			elseif t == 17 then 
				stream[index + 1] = 0xbd
				stream[index + 2] = 0x2f
				stream[index + 3] = 0x40
			elseif t == 18 then
				stream[index + 1] = 0x6c
				stream[index + 2] = 0xa8
				stream[index + 3] = 0x4d
			elseif t == 19 then
				stream[index + 1] = 0xf0
				stream[index + 2] = 0xe1
				stream[index + 3] = 0x43
			else
				stream[index + 1] = 0x00
				stream[index + 2] = 0x00
				stream[index + 3] = 0x00
			end
			stream[index + 4] = 0xff
		end
	end

	local resource_path = go.get("#sprite", "texture0")
	local header = {width = width, height = height, type = resource.TEXTURE_TYPE_2D, format = resource.TEXTURE_FORMAT_RGBA, num_mip_maps = 1}
	resource.set_texture(resource_path, header, buff)
	msg.post("#sprite", "disable")
end

function init(self)
	generate(self)
	msg.post("/level#script", "parse")
end