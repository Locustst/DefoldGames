local data = require "main.data"

local THRESH = 6

go.property("vel", vmath.vector3(0,0,0))

function init(self)
	self.lastpos = go.get_position()
	self.time = 0
	self.stamp = 0
	msg.post("#co", "apply_force", {force = self.vel, position = go.get_position()})
end

local function diff(a,b)
	return math.abs(a-b)
end

function update(self, dt)
	self.time = self.time + dt
	local pos = go.get_position()
	if self.time > 0.25 and diff(pos.x, data.playerpos.x) < THRESH and diff(pos.y, data.playerpos.y) < THRESH then
		go.delete()
		data.rocks = data.rocks + 1
		sound.play("main:/sound#pickup")
	end
	self.vel = go.get_position() - self.lastpos
	self.lastpos = go.get_position()
	self.stamp = self.stamp - 1
end

local function destblock(self)
	local pos = go.get_position()
	pos.x = pos.x + self.vel.x * 3
	pos = data.world2tile(pos)
	local t = tilemap.get_tile("/level#tilemap", "world", pos.x, pos.y)
	if t == 25 then
		tilemap.set_tile("/level#tilemap", "world", pos.x, pos.y, 0)
		msg.post("/common/fx", "explode", {pos = data.tile2world(pos)})
	end	
end

local function makesound(self)
	if vmath.length(self.vel) > 3 and self.stamp <= 0 then
		sound.play("main:/sound#rock", {gain = 0.5})
		self.stamp = 30
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.other_group == hash("enemy") then
			if math.random(1,2) == 1 and data.rocks > 0 then go.delete() end
		elseif message.other_group == hash("dest") then
			destblock(self)
		end
		makesound(self)
	end
end
