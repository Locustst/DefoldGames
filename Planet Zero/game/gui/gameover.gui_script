local data = require "main.data"

local function disable_node (self, node)
	gui.set_enabled(node, false)
end

function init(self)
	self.node = gui.get_node("container")
	gui.set_enabled(self.node, false)
	gui.set_color(self.node, vmath.vector4(1,1,1,0))
end

local function show(self)
	gui.set_enabled(self.node, true)
	gui.animate(self.node, gui.PROP_POSITION, data.guidest, gui.EASING_INOUTQUAD, 0.25)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,1), gui.EASING_INOUTQUAD, 0.25)
	data.state = data.STATE_GAMEOVER
end

local function hide(self)
	gui.animate(self.node, gui.PROP_POSITION, data.guistart, gui.EASING_INOUTQUAD, 0.25, 0, disable_node)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,0), gui.EASING_INOUTQUAD, 0.25, 0)
end

local function processinput(self, action_id, action)
	if gui.pick_node(gui.get_node("retry"), action.x, action.y) then
		hide(self)
		msg.post("/level#script", "newlevel")
		data.state = data.STATE_PLAYING
	elseif gui.pick_node(gui.get_node("quit"), action.x, action.y) then
		msg.post("camera#script", "reset")
		msg.post("main:/handler", "show_menu")
	end	
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		show(self)
	elseif message_id == hash("input") then
		processinput(self, message.action_id, message.action)
	end
end