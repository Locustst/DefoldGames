local data = require "main.data"

local DRAG = 0.05
local ACCEL = 0.1
local SPEED_MAX = 0.5
local MARGIN = 120
local OFFSET = 20
local LOCK = 1
local COOLDOWN = 5

function init(self)
	self.lock = 0
	self.move = vmath.vector3()
	self.rot = 0
	self.spin = math.random(5,10) / 4000
	if math.random(1,2) == 1 then self.spin = -self.spin end
	msg.post(".", "acquire_input_focus")
	sound.play("main:/sound#siren", {gain = 0.3})
end

local function quit2menu(self)
	msg.post("main:/sound", "stop_sound")
	msg.post("main:/handler", "show_menu")
end

local function move(self)
	local pos = go.get_position() + self.move
	go.set_position(pos)
	data.playerpos = pos
	
	if self.move.y ~= 0 then
		self.move.y = self.move.y - 0.002
		if self.move.y < -0.2 then self.move.y = -0.2
		end
		self.rot = self.rot + self.spin
		go.set_rotation(vmath.quat_rotation_z(self.rot))
	end
end

local function drag(self)
	if self.move.x > 0 then self.move.x = self.move.x - DRAG
		if self.move.x < 0 then self.move.x = 0 end
	elseif self.move.x < 0 then self.move.x = self.move.x + DRAG
		if self.move.x > 0 then self.move.x = 0 end
	end
end

function update(self, dt)
	move(self)
	drag(self)

	if self.lock > 0 then self.lock = self.lock - dt end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("position") then
		go.set_position(message.pos)
	elseif message_id == hash("contact_point_response") then
		msg.post("#co", "disable")
		msg.post("view#gameover", "show")
		particlefx.play("#sink")
		self.move.y = -0.01
		self.lock = LOCK
	end
end

local function bomb(self, offset)
	for n = 4, 1, -1 do
		if data.timer[n] <= 0 then
			data.timer[n] = COOLDOWN
			local pos = go.get_position() + offset
			factory.create("#bomb_factory", pos, nil, {offset = offset})
			sound.play("main:/sound#fire")
			return
		end
	end
end

local function input_playing(self, action_id, action)
	if action_id == hash("left") then
		if data.playerpos.x > MARGIN then
			self.move.x = self.move.x - ACCEL
			if self.move.x < -SPEED_MAX then self.move.x = -SPEED_MAX end
		end
	elseif action_id == hash("right") then
		if data.playerpos.x < data.CANV_W - MARGIN then
			self.move.x = self.move.x + ACCEL
			if self.move.x > SPEED_MAX then self.move.x = SPEED_MAX end
		end
	elseif action_id == hash("action") and action.pressed then
		bomb(self, vmath.vector3(-OFFSET,-4,0))
	elseif action_id == hash("action2") and action.pressed then
		bomb(self, vmath.vector3(OFFSET,-4,0))
	elseif action_id == hash("exit") and action.pressed then
		msg.post("main:/sound", "stop_sound")
		msg.post("main:/handler", "show_menu")
	end
end

local function input_gameover(self, action_id, action)
	if action_id == hash("action") and action.pressed then
		if data.score > data.hiscore then data.hiscore = data.score end
		quit2menu(self)
	end
end

function on_input(self, action_id, action)
	if self.lock > 0 then return end
	
	if data.state == data.STATE_PLAYING then
		input_playing(self, action_id, action)
	elseif data.state == data.STATE_GAMEOVER then
		input_gameover(self, action_id, action)
	end
end
