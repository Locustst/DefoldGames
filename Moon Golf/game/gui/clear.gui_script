local data = require "main.data"

local function disable_node (self, node)
	gui.set_enabled(node, false)
end

function init(self)
	self.node = gui.get_node("container")
	gui.set_enabled(self.node, false)
	gui.set_color(self.node, vmath.vector4(1,1,1,0))
	gui.set_position(self.node, vmath.vector3(data.SCR_W/2, (data.SCR_H/2) - data.GUI_DROP, 0))
end

local function show(self)
	gui.set_enabled(self.node, true)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(data.SCR_W/2, (data.SCR_H/2), 0), gui.EASING_INOUTQUAD, 0.25, 0.0)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,1), gui.EASING_INOUTQUAD, 0.25, 0.0)
	local text = tostring(data.score)
	if data.score == 9 then text = text.." (PERFECT!)" end
	text = text.."\n"..data.ms2str(os.clock() - data.starttime)
	gui.set_text(gui.get_node("stats"), text)
	data.state = data.STATE_CLEAR
end

local function hide(self)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(data.SCR_W/2, (data.SCR_H/2) - data.GUI_DROP, 0), gui.EASING_INOUTQUAD, 0.25, 0, disable_node)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,0), gui.EASING_INOUTQUAD, 0.25, 0)
end

local function input(self, action_id, action)
	if action_id == hash("action") and action.pressed then
		if gui.pick_node(gui.get_node("ok"), action.x, action.y) then
			msg.post("main:/sound", "stop_sound")
			msg.post("main:/handler", "show_menu")
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		show(self)
	elseif message_id == hash("hide") then
		hide(self)
	elseif message_id == hash("input") then
		input(self, message.action_id, message.action)
	end
end
